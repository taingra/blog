#+DATE: [2017-05-02 Tue]
#+TITLE: Emacsclient Setup with Desktop Integration
#+KEYWORDS: emacs

When using a typical text editor (e.g. gedit or vim) it is expected to be able
to quickly open and close files from your file manager or terminal. Emacs, while
a great editor, is not well suited for this workflow as typical users have long
configuration files that must be loaded slowing the start-up time. This is not a
problem if you start Emacs once and do everything inside of it, but if you are
frequently opening and closing windows you would be better off just starting
Emacs once and connect to it using the fast and lightweight =emacsclient=.

* Running Emacs as a daemon
#+BEGIN_SRC bash
emacs --daemon
#+END_SRC
This can be added to startup files that are sourced at login like your bash
profile (=~/.profile= or =~/.bash_profile=) to automatically start the daemon at
login.

** Using a systemd service
Alternatively, as of [[https://lists.gnu.org/archive/html/emacs-devel/2018-05/msg00765.html][GNU Emacs 26.1 a systemd unit file is included]], using
systemd allows for convenient management commands through the familiar =systemctl=
utility as used with other services.

| Systemctl commands | Description                         |
|--------------------+-------------------------------------|
| start              | Start (activate) one or more units  |
| stop               | Stop (deactivate) one or more units |
| restart            | Start or restart one or more units  |
| enable             | Enable one or more unit files       |
| disable            | Disable one or more unit files      |

Emacs's unit file is a user service, meaning it doesn't require root access and
is started at login rather than boot. In order to control user services we must
preface our commands with =--user= flag.

#+BEGIN_SRC bash
systemctl --user start emacs.service   # Start emacs for the current session
systemctl --user enable emacs.service  # Enable emacs to be started at login
#+END_SRC

* Open files from your graphical file browser
Now like any other graphical editor you will need a desktop icon in order to
open files from your graphical file browser. To do so create a desktop file for
emacsclient and place it in =~/.local/share/applications/emacsclient.desktop=[fn:1]

#+NAME: emacsclient.desktop
#+BEGIN_SRC conf
[Desktop Entry]
Name=Emacs Client
GenericName=Text Editor
Comment=Edit text
MimeType=text/english;text/plain;text/x-makefile;text/x-c++hdr;text/x-c++src;text/x-chdr;text/x-csrc;text/x-java;text/x-moc;text/x-pascal;text/x-tcl;text/x-tex;application/x-shellscript;text/x-c;text/x-c++;
Exec=emacsclient -c %f
Icon=emacs
Type=Application
Terminal=false
Categories=Utility;TextEditor;
#+END_SRC

Note that some distributions ship with an Emacs client desktop icon by
default, like Debian, so this step may be unnecessary unless you want
to make use of the script below.

** Open all files in one frame
This desktop file will result in each file being opened as a new Emacs frame (a
new window). This will clutter up your desktop if you open many files. A better
approach would be to open a new frame only if none exist otherwise open the file
as a new buffer in the existing frame. This is accomplished with the following
script [fn:3]

#+NAME: emacsclient-one-frame.sh
#+BEGIN_SRC bash
#!/bin/bash

# if no args open new frame
if [ $# -eq 0 ]; then
    emacsclient -c -n
    exit
fi

emacsclient -e "(frames-on-display-list \"$DISPLAY\")" &>/dev/null

if [ $? -eq 0 ]; then
    emacsclient -n "$*"
else
    emacsclient -c -n "$*"
fi
#+END_SRC

#+begin_notice
*Update [2025-02-20]*:

Neftali Figueroa suggested using the X11 [[https://github.com/mkropat/jumpapp][jumpapp]] tool to improve this
script.  [[https://gist.github.com/nefigcas/ab6b09b8eb730fcf24ad071167a1df9c][See their modified script here]].
#+end_notice

Make the script executable:
#+BEGIN_SRC bash
chmod +x emacsclient-one-frame.sh
#+END_SRC

And place it somewhere accessible from your =$PATH=. I use =~/bin= but if you would
like it hidden =~/.local/bin= is another option. Add both to your =$PATH= by adding
the following to your =~/bashrc=:

#+BEGIN_SRC bash
PATH="$HOME/.local/bin:$HOME/bin:$PATH"
export PATH
#+END_SRC

Change the Exec line in the desktop file to the script.
#+BEGIN_SRC conf
Exec=emacsclient-one-frame.sh %f
#+END_SRC

** Set as default in Nautilus
In nautilus file browser find a text file type you wish to be
associated with Emacs client. Right click it, select properties, move
to the "Open With" tab choose Emacs Client and press "Set as
default".

* Add a command alias
If you frequently start Emacs from the commandline you'll want to
start using emacsclient to speed up your startup time. In your
=~/.bashrc= consider adding one of the following aliases

#+BEGIN_SRC bash
alias emacs='emacsclient-one-frame.sh'
alias ec='emacsclient -t'                # Opens emacs inside terminal
#+END_SRC

** Set emacsclient as your default terminal  editor
In your =~/.profile= or =~/.bash_profile= add the following lines

#+BEGIN_SRC bash
VISUAL='emacsclient -t'
export VISUAL
#+END_SRC

=VISUAL= means  full-screen or /visual/ editor, this variable should be used over
=EDITOR=. =EDITOR=  is a fallback used when full-screen editing features are not
available. [fn:4]

* Footnotes
[fn:4] [[https://unix.stackexchange.com/questions/4859/visual-vs-editor-whats-the-difference][VISUAL versus EDITOR]]

[fn:3] [[http://stackoverflow.com/questions/25029877/using-emacs-as-a-server-and-opening-only-one-window-exactly-which-should-be-max#28015471][Shell script adapted from StackOverflow user mzuther]]

[fn:1] [[https://developer.gnome.org/integration-guide/stable/desktop-files.html.en][GNOME Desktop file guide]]
